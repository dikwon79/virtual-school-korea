generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  username   String       @unique
  email      String?      @unique
  password   String?
  phone      String?      @unique
  github_id  String?      @unique
  avatar     String?
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  SMSToken   SMSToken[]
  Course     Course[]
  LiveStream LiveStream[]
}

model SMSToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
}

model Course {
  id          Int    @id @default(autoincrement())
  title       String
  price       Float
  photo       String
  description String
  level       String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int

  // Course와 Lesson 사이의 일대다 관계
  lessons Lesson[]
}

model Lesson {
  id       Int    @id @default(autoincrement())
  title    String
  videoUrl String
  // 강의에 필요한 다른 필드들을 추가할 수 있습니다.
  // 예: videoUrl, content, duration 등

  // Course와의 관계 설정
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int

  // 강의 순서를 나타내는 필드(예: 1, 2, 3, ... 20)
  order Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model LiveStream {
  id         Int      @id @default(autoincrement())
  title      String
  stream_key String
  stream_id  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
}
